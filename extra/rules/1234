var executed=false;
function executeRule()
{
 executed=true;
 if(trader.get("ApiLag")>10)
 {
 trader.log("Api lag is to high");
 trader.delay(1,"executeRule()");
 return;
 }

 var amount = 1.0;

 var price = trader.get("NMCBTC" , "LastPrice");
 price += 0.00000001;

 trader.buy("NMCBTC" , amount , price);
 trader.groupDone();
}

var baseVariable = calcBaseVariable();
function calcBaseVariable()
{
 baseVariable = trader.get("NMCBTC" , "LastMySellPrice");
 baseVariable += 1.0;
 return baseVariable;
}

trader.on("LastPrice").changed()
{
 if(executed)return;
 if(symbol != "NMCBTC")return;
 calcBaseVariable();
 if(value < baseVariable)  executeRule();
}



function checkOrderbook() {

	var lastPrice = trader.get("LastPrice");
	var asksPrice = trader.get("AsksPrice",500);
	var asksVolume = trader.get("AsksVolume", 500); // at lastPrice 476

	trader.log("lastPrice: ", lastPrice); // returns 476
	trader.log("asksPrice: ", asksPrice); // returns 0
	trader.log("asksVolume: ", asksVolume); // returns 0
	
	
	
	some thoughts, nice to have:
- trader.get("10MinBuyDivSell") changed to trader.get("BuyToSell", minutes) so we can define timeframe we are interested in. Same for 10MinVolume.
- trader.get("NoOfTrades", minutes) - number of transactions in last x minutes.
- a way to access LastTrades: trader.get("LastTrades", minutes) - to retrieve all trades in last X minutes.
- a way to access orderbook: trader.get("Orderbook", fromPrice, toPrice) - to retrieve all orders from orderbook between specified price range.
- buy and sell commands should return ID, so we can later check / cancel specific order

