[JLScript]
Data="///    This program is free software: you can redistribute it and/or modify\n///    it under the terms of the GNU General Public License as published by\n///    the Free Software Foundation, either version 3 of the License, or\n///    (at your option) any later version.\n///\n///    This program is distributed in the hope that it will be useful,\n///    but WITHOUT ANY WARRANTY; without even the implied warranty of\n///    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n///    GNU General Public License for more details.\n///\n///    You should have received a copy of the GNU General Public License\n///    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n    \n//When you have enough bitcoins, this script will follow the Ask price when it goes up. \n//When it drops below the ceiling by PercentageTop<Win or Loss>%, the script will sell all bitcoins.\n//When we are making profit, and the price drops below this percentage, we sell\nvar PercentageTopWin = 1.0;\n//When we are making loss, and the price drops below this percentage, we sell\nvar PercentageTopLoss = 25.0;\n//When you have enough Euros, the script will follow the Bid price when it goes down.\n//When it rises above the floor by PercentageBot%, the script will buy bitcoins for your EUR balance\n//When we are making profit and the price raises above this percentage, we buy\nvar PercentageBotWin = 1.0;\n//When we are making loss and the price raises above this percentage, we buy\nvar PercentageBotLoss = 25.0;\n//Set this path to the log file to log prices and \nvar fileLoggerFile = \"/home/franss/CernBox/programmeren/MinMaxFollower.log\";\n//Set this to the minimum saldo that a trade can be executed (in Euro)\nvar MinimalTradeValue = 20;\n\n//Don't change these values, just initial variable values.\nvar BuyFloor=1e99;\nvar SellCeiling=0;\n\n\nlog(\"Starting MinMaxFollower, please donate bitcoins to:\");\nlog(\"3DmSBjaNptXp5dPNiPejzC6Un8HkWdWnxW\");\n\n\ntrader.on(\"AskPrice\").changed()\n{\n    if(symbol != \"DOGEBTC\")return;\n    if(trader.get(\"ApiLag\")>10)\n    {\n        log(\"Api lag is to high\");\n        return;\n    } else {         log(\"Api lag is good\"); }\n\n    var balanceBTC = trader.get(\"Balance\",\"BTC\");\n    var AskPrice = trader.get(\"AskPrice\");\n    var openAsks = trader.get(\"OpenAsksCount\");\n    \n       \n    var PercentageTop = PercentageTopLoss;\n    var LastBuyPrice = trader.get(\"LastMyBuyPrice\");\n    \n    if((AskPrice * (1.0 - trader.get(\"Fee\") / 100.0)) > LastBuyPrice) //Check if we are winning\n    {\n        PercentageTop = PercentageTopWin;\n        if((balanceBTC*AskPrice)>=MinimalTradeValue)\n            log(\"Making profit: EUR\"+round2(((AskPrice * (1.0 - trader.get(\"Fee\") / 100.0)) - LastBuyPrice)*balanceBTC)+\", Ask-FEE: \"+round2(AskPrice * (1.0 - trader.get(\"Fee\") / 100.0))+\", Last Buy: \"+round2(LastBuyPrice));\n    }\n    \n    \n    \n    if(openAsks > 0) //If price changes while asks are open, keep following the ask price until order is executed.\n    {\n        log(\"Askprice changed to \"+round2(AskPrice)+\", cancel asks and sell again\");\n        trader.cancelAsks(\"DOGEBTC\");\n        SellCeiling = trader.get(\"DOGEBTC\" , \"AskPrice\") * (1+(PercentageTop/100));\n        return;\n    }\n    if((balanceBTC*AskPrice)<MinimalTradeValue)\n    {\n        SellCeiling = 0;\n         return; //not enough balance\n    }\n    var p = 1 - (1*(PercentageTop/100));\n    if(AskPrice < (SellCeiling *p))\n    {\n        var amount = balanceBTC;\n        amount *= (1.0 - trader.get(\"Fee\") / 100.0);\n        var SellPrice = (SellCeiling*p);\n        log(\"Selling amount DOGE\"+round2(amount)+\", amount BTC\"+round2(amount*SellPrice)+\", Price\"+round2(SellPrice));\n        trader.sell(\"DOGEBTC\", amount, SellPrice);\n        SellCeiling = 0;\n        return;\n    }\n    else if (AskPrice>SellCeiling)\n    {\n        SellCeiling = AskPrice;\n        log(\"Set new SellCeiling: EUR\"+ round2(SellCeiling));\n        return;\n    }\n    log(\"Below SellCeiling: \"+ round2(100*((AskPrice-SellCeiling)/SellCeiling))+\"%, sell at:\"+ round2(-1*PercentageTop) + \"%\");\n}\n\n\ntrader.on(\"BidPrice\").changed()\n{\n    if(symbol != \"DOGEBTC\")return;\n    if(trader.get(\"ApiLag\")>10)\n    {\n        log(\"Api lag is to high\");\n        return;\n    }\n\n    var balanceEUR = trader.get(\"Balance\",\"EUR\");\n    var BidPrice = trader.get(\"BidPrice\");\n    var openBids = trader.get(\"OpenBidsCount\");\n    var PercentageBot = PercentageBotLoss;\n    var LastSellPrice = trader.get(\"LastMySellPrice\");\n    \n    if((BidPrice * (1.0 + trader.get(\"Fee\") / 100.0)) < LastSellPrice) //Check if we are winning\n    {\n        PercentageBot = PercentageBotWin;\n        if((balanceEUR)>=MinimalTradeValue)\n            log(\"Making profit: EUR\"+round2(((BidPrice * (1.0 + trader.get(\"Fee\") / 100.0)) - LastSellPrice)*(balanceEUR/BidPrice))+\", Bid+FEE: \"+round2(BidPrice * (1.0 + trader.get(\"Fee\") / 100.0))+\", Last Buy: \"+round2(LastBuyPrice));\n    }\n    \n    if(openBids > 0) //If price changes while bids are open, keep following the bid price until order is executed.\n    {\n        log(\"Bidprice changed to \"+round2(BidPrice)+\", cancel bids and buy again\");\n        trader.cancelBids(\"DOGEBTC\");\n        BuyFloor = trader.get(\"DOGEBTC\" , \"BidPrice\") * (1-(PercentageBot/100));\n        return;\n    }\n    if((balanceEUR)<MinimalTradeValue)\n    {\n        BuyFloor = 1e99;\n        return; //not enough balance\n    }\n    var p = 1 + 1*(PercentageBot/100);\n    if(BidPrice > (BuyFloor*p))\n    {\n        var amount = balanceEUR;\n        amount -= 0.01;\n        amount *= (1.0 - trader.get(\"Fee\") / 100.0);\n        var BuyPrice = (BuyFloor*p);\n        log(\"Buying amount BTC\"+round2(amount/BuyPrice)+\", amount EUR\"+round2(amount)+\", Price\"+round2(BuyPrice));\n        trader.buy(\"DOGEBTC\", amount/BuyPrice, BuyPrice);\n        BuyFloor = 1e99;\n        return;\n    }\n    else if (BidPrice<BuyFloor)\n    {\n        BuyFloor = BidPrice;\n        log(\"Set new BuyFloor: EUR\" + round2(BuyFloor));\n        return;\n    }\n    log(\"Above BuyFloor: \" + round2(100*((BidPrice-BuyFloor)/BuyFloor)) +\"%, buy at:\"+ round2(PercentageBot)+ \"%\");\n}\n\n\nfunction log(str)\n{\n    trader.log(str);\n    trader.fileAppend(fileLoggerFile, trader.dateTimeString() + \" - \" + str);\n}\n\nfunction round2(number)\n{\n    return Math.round(number*100)/100;\n}\n"
Encrypted=false
LogRowsCount=20
Name=Script 1
Notes=
Version=1
